<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>techfreak.net</title>
 <link href="http://www.techfreak.net/atom.xml" rel="self"/>
 <link href="http://www.techfreak.net/"/>
 <updated>2010-09-08T01:19:02-07:00</updated>
 <id>http://www.techfreak.net/</id>
 <author>
   <name>Brendon Murphy</name>
 </author>
 
 <entry>
   <title>Time Override</title>
   <link href="http://www.techfreak.net/vendor/bundle/ruby/1.8/gems/jekyll-0.7.0/test/source/2010/01/10/time-override.html"/>
   <updated>2010-01-10T13:07:09-08:00</updated>
   <id>http://www.techfreak.net/vendor/bundle/ruby/1.8/gems/jekyll-0.7.0/test/source/2010/01/10/time-override</id>
   <content type="html">&lt;p&gt;Post with a front matter time&lt;/p&gt;
&lt;p&gt;10 Jan 2010&lt;/p&gt;</content>
   <author>
     <name>Brendon Murphy</name>
     <uri>http://www.techfreak.net/about.html</uri>
   </author>
 </entry>
 
 <entry>
   <title>Override Data</title>
   <link href="http://www.techfreak.net/vendor/bundle/ruby/1.8/gems/jekyll-0.7.0/test/source/2010/01/10/override-data.html"/>
   <updated>2010-01-10T13:07:09-08:00</updated>
   <id>http://www.techfreak.net/vendor/bundle/ruby/1.8/gems/jekyll-0.7.0/test/source/2010/01/10/override-data</id>
   <content type="html"></content>
   <author>
     <name>Brendon Murphy</name>
     <uri>http://www.techfreak.net/about.html</uri>
   </author>
 </entry>
 
 <entry>
   <title>Timezone Override</title>
   <link href="http://www.techfreak.net/vendor/bundle/ruby/1.8/gems/jekyll-0.7.0/test/source/2010/01/10/timezone-override.html"/>
   <updated>2010-01-10T05:07:09-08:00</updated>
   <id>http://www.techfreak.net/vendor/bundle/ruby/1.8/gems/jekyll-0.7.0/test/source/2010/01/10/timezone-override</id>
   <content type="html">&lt;p&gt;Post with a front matter time with timezone&lt;/p&gt;
&lt;p&gt;10 Jan 2010&lt;/p&gt;</content>
   <author>
     <name>Brendon Murphy</name>
     <uri>http://www.techfreak.net/about.html</uri>
   </author>
 </entry>
 
 <entry>
   <title>Date Override</title>
   <link href="http://www.techfreak.net/vendor/bundle/ruby/1.8/gems/jekyll-0.7.0/test/source/2010/01/10/date-override.html"/>
   <updated>2010-01-10T00:00:00-08:00</updated>
   <id>http://www.techfreak.net/vendor/bundle/ruby/1.8/gems/jekyll-0.7.0/test/source/2010/01/10/date-override</id>
   <content type="html">&lt;p&gt;Post with a front matter date&lt;/p&gt;
&lt;p&gt;10 Jan 2010&lt;/p&gt;</content>
   <author>
     <name>Brendon Murphy</name>
     <uri>http://www.techfreak.net/about.html</uri>
   </author>
 </entry>
 
 <entry>
   <title>Foo --- Bar</title>
   <link href="http://www.techfreak.net/vendor/bundle/ruby/1.8/gems/jekyll-0.7.0/test/source/2010/01/08/triple-dash.html"/>
   <updated>2010-01-08T00:00:00-08:00</updated>
   <id>http://www.techfreak.net/vendor/bundle/ruby/1.8/gems/jekyll-0.7.0/test/source/2010/01/08/triple-dash</id>
   <content type="html">&lt;p&gt;Triple the fun!&lt;/p&gt;</content>
   <author>
     <name>Brendon Murphy</name>
     <uri>http://www.techfreak.net/about.html</uri>
   </author>
 </entry>
 
 <entry>
   <title>Hello World!</title>
   <link href="http://www.techfreak.net/vendor/bundle/ruby/1.8/bundler/gems/rack-jekyll-0bd8153f5fc1/example/2009/12/21/hello-world.html"/>
   <updated>2009-12-21T00:00:00-08:00</updated>
   <id>http://www.techfreak.net/vendor/bundle/ruby/1.8/bundler/gems/rack-jekyll-0bd8153f5fc1/example/2009/12/21/hello-world</id>
   <content type="html">&lt;h1&gt;Hello World!&lt;/h1&gt;</content>
   <author>
     <name>Brendon Murphy</name>
     <uri>http://www.techfreak.net/about.html</uri>
   </author>
 </entry>
 
 <entry>
   <title>Metaprogramming in Ruby: Part 1</title>
   <link href="http://www.techfreak.net/2009/10/30/metaprogramming-in-ruby-part-1.html"/>
   <updated>2009-10-30T00:00:00-07:00</updated>
   <id>http://www.techfreak.net/2009/10/30/metaprogramming-in-ruby-part-1</id>
   <content type="html">&lt;p&gt;I joked with a co-worker the other day that, sometimes I think I&amp;#8217;m better at Ruby metaprogramming that straight ahead programming.  This is a serious exaggeration, and I don&amp;#8217;t count myself as an expert at either.  However, it dawned on me that, I have a few friends that aren&amp;#8217;t as exposed to metaprogramming concepts in Ruby, so, what better topic to share about.  Hopefully in the process, you&amp;#8217;ll learn something new, and, I&amp;#8217;ll become better at explaining Ruby concepts and sharing code.&lt;/p&gt;
&lt;p&gt;Before I dive in with some introductory examples, a quick definition of metaprogramming is in order.  To quote &lt;a href=&quot;http://en.wikipedia.org/wiki/Metaprogramming&quot; title=&quot;Wikipedia&quot;&gt;Wikipedia&lt;/a&gt;, &amp;#8220;Metaprogramming is the writing of computer programs that write or manipulate other programs (or themselves) as their data, or that do part of the work at compile time that would otherwise be done at runtime&amp;#8221;.  If you use Rails (and, I know you do), metaprogramming enables things you already do on a daily basis, such as dynamic find_by methods in ActiveRecord, or plugins that dynamically get a class to include them (acts_as_list, acts_as_tree, etc).&lt;/p&gt;
&lt;p&gt;In this writeup, I&amp;#8217;ll start with two extremely basic metaprogramming concepts.  In fact, these might not even be considered true Ruby metaprogramming, but, I wanted to start with some simple ideas which you may not have been exposed to in Ruby 101.&lt;/p&gt;
&lt;p&gt;The first concept to get down in Ruby is that, classes are objects like anything else.  In Ruby, this means you can open the class and modify it on the fly.  The practice is affectionately called monkey patching or duck punching.  Let&amp;#8217;s look at a simple example:&lt;/p&gt;
&lt;script src=&quot;http://gist.github.com/222706.js&quot;&gt;&lt;/script&gt;&lt;p&gt;You can see above, we&amp;#8217;ve created a Foo class with a public instance method, bar.  Calling foo.bar, we&amp;#8217;ll get the output we expect, &amp;#8220;bar!&amp;#8221;.  Next, we reopen the Foo class, and add a new public instance method, foobar.  Had we tried to use Foo#foobar before this, we&amp;#8217;d get a NoMethodError exception, as expected.  However, having reopened and modified the class, we can call our new method.&lt;/p&gt;
&lt;p&gt;The other demonstration I&amp;#8217;d like to show is one way you can define methods on the fly.  This example is abstract and doesn&amp;#8217;t represent a recommended use, it&amp;#8217;s simply to prove the point.&lt;/p&gt;
&lt;script src=&quot;http://gist.github.com/222724.js&quot;&gt;&lt;/script&gt;&lt;p&gt;Running this simple example, the first call to foo_two.bar will output &amp;#8220;bar&amp;#8221;.  However, once we call foo.cap_bar, the public instance method bar is changed.  Running it a second time will output &amp;#8220;&lt;span class=&quot;caps&quot;&gt;BAR&lt;/span&gt;!!!&amp;#8221;.  A more common, rubyish way of defining methods at run time in Ruby is the use of &lt;a href=&quot;http://ruby-doc.org/core/classes/Module.html#M001654&quot; title=&quot;define_method&quot;&gt;define_method&lt;/a&gt;, which I&amp;#8217;ll cover in a future post.&lt;/p&gt;
&lt;p&gt;An important concept to keep in mind here is that, you aren&amp;#8217;t modifying behavior solely on the foo or foo_two instances.  Instead, you are changing the behavior of any open instance of the Foo or FooTwo classes.  So in our FooTwo example, if you were to create a foo_too instance, calling foo_too.bar would run through the dynamically created method as well and output &amp;#8220;&lt;span class=&quot;caps&quot;&gt;BAR&lt;/span&gt;!!!&amp;#8221;.  In future postings, we&amp;#8217;ll see a different approach of opening instances and defining methods specific to that instance.&lt;/p&gt;
&lt;p&gt;Hopefully this has whet your appetite a little, and, in the future, we can run through some more exciting examples of the metaprogramming facilities Ruby has to offer.&lt;/p&gt;</content>
   <author>
     <name>Brendon Murphy</name>
     <uri>http://www.techfreak.net/about.html</uri>
   </author>
 </entry>
 
 <entry>
   <title>No Yaml</title>
   <link href="http://www.techfreak.net/vendor/bundle/ruby/1.8/gems/jekyll-0.7.0/test/source/2009/06/22/no-yaml.html"/>
   <updated>2009-06-22T00:00:00-07:00</updated>
   <id>http://www.techfreak.net/vendor/bundle/ruby/1.8/gems/jekyll-0.7.0/test/source/2009/06/22/no-yaml</id>
   <content type="html">&lt;p&gt;No &lt;span class=&quot;caps&quot;&gt;YAML&lt;/span&gt;.&lt;/p&gt;</content>
   <author>
     <name>Brendon Murphy</name>
     <uri>http://www.techfreak.net/about.html</uri>
   </author>
 </entry>
 
 <entry>
   <title>Empty Yaml</title>
   <link href="http://www.techfreak.net/vendor/bundle/ruby/1.8/gems/jekyll-0.7.0/test/source/2009/06/22/empty-yaml.html"/>
   <updated>2009-06-22T00:00:00-07:00</updated>
   <id>http://www.techfreak.net/vendor/bundle/ruby/1.8/gems/jekyll-0.7.0/test/source/2009/06/22/empty-yaml</id>
   <content type="html">&lt;p&gt;Empty &lt;span class=&quot;caps&quot;&gt;YAML&lt;/span&gt;.&lt;/p&gt;</content>
   <author>
     <name>Brendon Murphy</name>
     <uri>http://www.techfreak.net/about.html</uri>
   </author>
 </entry>
 
 <entry>
   <title>Test title</title>
   <link href="http://www.techfreak.net/vendor/bundle/ruby/1.8/gems/jekyll-0.7.0/test/source/win/2009/05/24/yaml-linebreak.html"/>
   <updated>2009-05-24T00:00:00-07:00</updated>
   <id>http://www.techfreak.net/vendor/bundle/ruby/1.8/gems/jekyll-0.7.0/test/source/win/2009/05/24/yaml-linebreak</id>
   <content type="html">&lt;p&gt;This is the content&lt;/p&gt;</content>
   <author>
     <name>Brendon Murphy</name>
     <uri>http://www.techfreak.net/about.html</uri>
   </author>
 </entry>
 
</feed>